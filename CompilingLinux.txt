Compiling on Linux
------------------
* install gcc (on Ubuntu something like build-essentials)
* install qtcreator
* install git
* install opencv (development version)
* install hdf5 (development version)
* Now open QtCreator and click New Project - Import Project - Git Clone and for repository type:
  https://github.com/SamDehaeck/GigaViewer . Now select where you want to save and click continue.
* Take a look at the configuration options mentionned in the Gigaviewer.pro file, to select the options you want to include. For the different camera backends, you need to install their 'drivers' first (to be found on their websites).
For the first compilation tests, it is best to leave all extra features turned off. In this way, the correct functioning of the Qt and Opencv libraries is checked.
The Hdf5 option is a usefull extension, as it gives access to a more 'universal' single container movie format which is easily accessible from many different programs.
The 'Tracking' option is work in progress to illustrate real time processing of the recorded images. It has no real use for the moment
Before you enable the different camera backends, you need to install their respective 'drivers' first (to be found on their websites).

Post-install tips for Linux:
----------------------------

* The included gigaviewer.desktop file should be copied to the ~/.local/share/applications folder and its executable bit set
* The GigaViewer.svg file should be copied to ~/.local/share/icons folder

Now you should be able to make a launcher e.g. on ubuntu by dragging the desktop file to the sidebar
or e.g. on gnome3 by first starting the .desktop file by double-clicking it. The icon will be visible now in the sidebar; just add it to the favourites.
Note that it could happen that it only shows up after a restart.

To correctly associate the created .fmf movies with the application do the following:

* copy video-fmf.xml to the ~/.local/share/mime/packages folders
* copy GigaViewer.svg to /usr/share/icons/gnome/scalable/mimetypes/video-fmf.svg
* update-mime-database ~/.local/share/mime
* sudo gtk-update-icon-cache /usr/share/icons/gnome

if this is not working, copy it to your iconset folder mimetypes/scalable folder on apply gtk-update-icon-cache to this folder
